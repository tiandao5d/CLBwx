<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-autowire="byName" default-lazy-init="false">
    
	<!-- 使用disconf必须添加以下配置 -->
    <bean id="disconfMgrBean" class="com.baidu.disconf.client.DisconfMgrBean"
          destroy-method="destroy">
        <property name="scanPackage" value="com.example.disconf.demo"/>
    </bean>
    <bean id="disconfMgrBean2" class="com.baidu.disconf.client.DisconfMgrBeanSecond"
          init-method="init" destroy-method="destroy">
    </bean>
    
    
    <!-- 使用托管方式的disconf配置(无代码侵入, 配置更改不会自动reload)-->
    <bean id="configproperties_no_reloadable_disconf"
          class="com.baidu.disconf.client.addons.properties.ReloadablePropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>db.properties</value>
            	<value>system.properties</value>
            	<value>shop.properties</value>
            	<value>user.properties</value>
            	<value>redis-cache.properties</value>
            	<value>weixin.properties</value>
            	<value>alipay.properties</value>
            	<value>lotplay.properties</value>
                <value>qiniuCloud.properties</value>
            </list>
        </property>
    </bean>

    <bean id="propertyConfigurerForProject1"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="propertiesArray">
            <list>
                <ref bean="configproperties_no_reloadable_disconf"/>
            </list>
        </property>
    </bean>
        
   	 <bean id="weiXinParam" class="com.genlot.ushop.api.merchant.thirdparty.weixin.entity.WeiXinParam">
         <property name="authorizedUrl" value="${weixin.authorized.redirecturl}"/>
         <property name="unauthorizedUrl" value="${weixin.unauthorized.redirecturl}"/>
     </bean>
    
    
    <!-- 根据机房 实例化配置类 -->
    <!-- 
	    zone0必须是静态方法  
	    +*********+****************+
	    | 华东 	  | Zone.zone0()   |
	    +*********+****************+
	    | 华北	  | Zone.zone1()   |
	    +*********+****************+
	    | 华南 	  | Zone.zone2()   |
	    +*********+****************+
	    | 北美 	  | Zone.zoneNa0() |
	    +*********+****************+
	-->
    <bean id="cfg" class="com.qiniu.storage.Configuration">
		<constructor-arg>
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		      <property name="targetClass"> 
		        <value>com.qiniu.common.Zone</value> 
		      </property> 
		      <property name="targetMethod"> 
		        <value>zone0</value> 
		      </property> 
		    </bean> 
		</constructor-arg>
	</bean>
	
	
	<bean id="qiniuCloudUtil" class="com.genlot.common.web.file.QiniuCloudUtil">
		<property name="domain" value="${qiniuCloud.domain}"/>
		<property name="bucketName" value="${qiniuCloud.bucketName}"/>
		<property name="accessKey" value="${qiniuCloud.accessKey}"/>
		<property name="secretKey" value="${qiniuCloud.secretKey}"/>
		<property name="cfg" ref="cfg"/>
	</bean>
	
	<bean id="iPSeeker" class="com.genlot.common.utils.net.IPSeeker" init-method="start">
        <property name="file" value="${ip.database.path}"/>
    </bean>
       
    
	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="com.codingapi.tx.*"/>

	<!--<import resource="classpath:spring/spring-security.xml" />-->
	<import resource="classpath:spring/dubbo/dubbo-consumer.xml" />
	<import resource="classpath:spring/spring-mq.xml" />
	<import resource="classpath:spring/spring-action.xml" />
	<import resource="classpath:spring/spring-redis.xml" />
</beans>